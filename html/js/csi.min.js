window.onload=function(){function a(a,b){var c=/^(?:file):/,d=new XMLHttpRequest,e=0;d.onreadystatechange=function(){4==d.readyState&&(e=d.status),c.test(location.href)&&d.responseText&&(e=200),4==d.readyState&&200==e&&(a.outerHTML=d.responseText)};try{d.open("GET",b,!0),d.send()}catch(f){}}var b,c=document.getElementsByTagName("*");for(b in c)c[b].hasAttribute&&c[b].hasAttribute("data-include")&&a(c[b],c[b].getAttribute("data-include"));setBodyPath();addFileClickHandler();};
function setBodyPath(){
    const pathName = location.pathname;
    const pathTag = document.getElementById('current-location');
    console.log(pathName);

    let decoded = decodeURI(pathName);
    // 디코딩 후, 기존과 다르면 encode 된 것임
    if(decoded === pathName){
        decoded = pathName;
    }

    if(pathTag){
        pathTag.innerText = decoded;
    }
}
function addFileClickHandler(){
    const pathName = location.pathname;
    const files = document.getElementsByClassName('file-name');
    for(let i = 0; i < files.length; i++){
        const file = files[i];
        file.addEventListener('click', function(e)
            {
                const fileName = file.innerText;
                let uri = (pathName !== '/')
                ? location.origin + pathName + '/' + fileName
                : location.origin + '/' + fileName;

                if(fileName === '..'){
                    let paths = pathName.split('/');
                    uri = location.origin;
                    if(paths.length === 2){
                        location.href = location.origin;
                        return;
                    }

                    for(let i = 1; i < paths.length-1; i++){
                        uri += '/' + paths[i];
                    }
                }
                if(uri.substring(uri.length-1) === '/'){
                    uri = uri.substring(0, uri.length-1);
                }
                location.href = uri;
            }
        );
    }
}